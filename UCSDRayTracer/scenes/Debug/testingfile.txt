# files to test my math implimentaiton

#define file name and resolution (only ppm works currently, will export as ppm and jpeg)

fileName doggo5.ppm

#define resolution (x y):
resolution 250 250
#resolution 320 240 


#define camera coord: (10 values: lookfromx lookfromy lookfromz lookatx lookaty lookatz upx upy upz fov)

maxDepth = 50;


#camera 1 1 1 0 0 0 0 1 0 30

#camera 0 0 4 0 0 0 0 1 0 30
#camera 0 -3 3 0 0 0 0 1 0 30
#camera -4 0 1 0 0 1 0 0 1 45
#camera -5 -4 4 1 0 0 0 1 0 30


camera -2 -2 2 0 0 0 1 1 2 60
#camera +2 +2 2 0 0 0 -1 -1 2 60
#camera -2 -2 -2 0 0 0 -1 -1 2 60


#     lr   ud
#camera 0 1 1 0 0 0 0 1 0 30

ambient 1 0 0

sphere 0 0 0 .5

#translate -10 0 -14

#vertex x y z (coords)
#tri v1 v2 v3 (connect three vertex together)


ambient 0 0 1

#geometry 
maxverts 8


vertex -1 -1 0 
vertex +1 -1 0
vertex +1 +1 0	
vertex -1 +1 0

#tri 0 1 2
#tri 0 2 3

popTransform
 
end
 
vertex -1 -1 -1
vertex +1 -1 -1 
vertex +1 +1 -1 
vertex -1 +1 -1 
vertex -1 -1 +1
vertex +1 -1 +1 
vertex +1 +1 +1
vertex -1 +1 +1

# Now, I actually define the cube.  Note that to avoid lighting/material 
# calculations, I am just using ambient to define the colors.
# No lighting calculations should be performed since I haven't defined any 
# lights.

ambient .5 0 .5 
# face -Y
tri 0 1 5 
tri 0 5 4 
#ambient .5 1 .5 
# face +Y
tri 3 7 6
tri 3 6 2
#ambient 1 .5 .5 
# face +X
tri 1 2 6
tri 1 6 5 
#ambient 0 .5 .5 
# face -X
tri 0 7 3 
tri 0 4 7 
#ambient .5 .5 0
# face -Z
tri 0 3 2 
tri 0 2 1
#ambient .5 .5 1
# face +Z
tri 4 5 6 
tri 4 6 7 

popTransform
